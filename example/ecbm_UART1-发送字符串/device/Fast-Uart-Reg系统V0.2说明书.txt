				Fast-Uart-Reg系统V0.2说明书

搭建方法（不是移植方法）：
1.使能串口接收回调、片内EEPROM。
2.fue_in放入串口接收回调函数里，参数设置为该串口的接收缓存。如fue_in（SBUF）；
3.main函数while循环前运行fue_init；
4.main函数while循环里运行fue_check；

实例：
//这是一个验证delay函数的实例。
void main(){
	system_init();		//系统初始化，必须的。
	fue_init();		//初始化FUE系统。
	while(1){
		fue_check();		//检测函数。
		P20=1;			//为了便于逻辑分析仪测试，在delay前置高电平。
		delay_ms(ecbm_reg[2]);	//将寄存器2的值作为延时的时间，
					//在串口更改几个延时值做对比测试。
		P20=0;	//在delay之后置低电平。
			//于是在逻辑分析仪中测量高电平时间就知道delay的持续时间。
	}
}
void uart1_receive_callback(){//串口1的中断。
	fue_in(SBUF);
}

普通用法：
1.串口连接并打开串口助手。
2.查询某个寄存器用“[地址]=?.”。例如“[2]=?.”就是查询地址为2的寄存器的值，串口助手会返回“[2]=100.”意思是地址为2的寄存器的值是100。
3.修改某个寄存器用“[地址]=值.”。例如“[2]=80.”就是修改地址为2的寄存器的值为80，串口助手会返回“[2]=80.”意思是地址为2的寄存器的值是80。
4.寄存器的地址范围是可以设置的，最少是2、最多是256。

特殊用法：
1.寄存器0存放串口通信的波特率的百分之一。比如寄存器0的值是1152时，代表波特率是115200。同理值为96的时候，代表波特率为9600。
2.寄存器1为触发寄存器，写入0xA55A会将当前的设置保存到EEPROM里，写入0xF00F会将EEPROM里的设置读取覆盖当前设置。